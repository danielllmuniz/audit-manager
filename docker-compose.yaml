services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - api-gateway
    networks:
      - audit-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    environment:
      - PORT=3000
      - JWT_SECRET=fasdafsdafsd
      - JWT_EXPIRES_IN=24h
      - APPLICATION_SERVICE_URL=http://application-service:5000
    depends_on:
      - application-service
    networks:
      - audit-network

  application-service:
    build:
      context: ./application-service
      dockerfile: Dockerfile
    container_name: application-service
    ports:
      - "5000:5000"
    volumes:
      - ./application-service:/app
    environment:
      - FLASK_ENV=development
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=audit_db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - audit-network

  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=audit_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-ppassword"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s
    networks:
      - audit-network

volumes:
  mysql_data:

networks:
  audit-network:
    driver: bridge